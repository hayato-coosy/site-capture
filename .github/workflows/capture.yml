name: Capture & Publish (safe + dedup, 10 inputs)

on:
  workflow_dispatch:
    inputs:
      start_urls:
        description: "開始URL（カンマ区切り可）"
        required: true
      devices:
        description: "デバイス/解像度（例: 'Desktop 1440x900,iPhone 13,375x812'）"
        required: false
        default: "Desktop 1440x900,iPhone 13"
      full_page:
        description: "フルページ（true/false）"
        required: false
        default: "true"
      scale:
        description: "解像度スケール（1,2,3…）"
        required: false
        default: "2"
      filename_mode:
        description: "保存: flat（フラット）/ tree（階層）"
        required: false
        default: "flat"
      max_depth:
        description: "最大深さ（0=開始のみ, 1=子, 2=孫…）"
        required: false
        default: "1"
      max_pages:
        description: "最大ページ数（総ブレーキ）"
        required: false
        default: "100"
      wait_between_ms:
        description: "ページ間待機ms（SAFE時は自動引上げ）"
        required: false
        default: "1000"
      publish_target:
        description: "出力先: artifact（内部） | pages（公開）"
        required: false
        default: "artifact"
      layout_dedup:
        description: "同一レイアウトは最初の1件だけ（true/false）"
        required: false
        default: "true"

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps
        run: |
          npm install --no-audit --no-fund
          npx playwright install --with-deps

      - name: Capture screenshots
        run: npm run capture
        env:
          # === 必須・よく使う項目（inputs から受け取る） ===
          START_URLS: ${{ inputs.start_urls }}
          DEVICES: ${{ inputs.devices }}
          FULL_PAGE: ${{ inputs.full_page }}
          SCALE: ${{ inputs.scale }}
          FILENAME_MODE: ${{ inputs.filename_mode }}
          MAX_DEPTH: ${{ inputs.max_depth }}
          MAX_PAGES: ${{ inputs.max_pages }}
          WAIT_BETWEEN_MS: ${{ inputs.wait_between_ms }}
          PUBLISH_TARGET: ${{ inputs.publish_target }}
          LAYOUT_DEDUP: ${{ inputs.layout_dedup }}

          OUT_DIR: public

          # === 高度な設定（ここで既定値を編集して使う） ===
          # 安全系
          SAFE_MODE: "true"                 # trueで控えめ設定に自動切替
          RESPECT_ROBOTS: "true"            # robots.txt Disallow/Crawl-delay を尊重
          SAME_HOST_ONLY: "true"            # 同一ホストのみ
          PATH_PREFIX_MODE: "start"         # start|none（開始URL配下のみ/制限なし）

          # 除外URL（個人領域や購入系など）
          SKIP_URL_PATTERNS: "login,logout,signin,signup,cart,checkout,account,mypage,admin,settings,profile,privacy"

          # マスク対象（個人情報っぽい要素）
          MASK_SELECTORS: "input[type='password'],input[type='email'],input[name*='mail'],input[name*='phone'],.email,.tel,.phone,[data-sensitive]"

          # サイトマップがある場合は指定（任意）
          SITEMAP_URL: ""

          # ナビゲーション耐性
          GOTO_TIMEOUT_MS: "120000"
          RETRIES: "1"
          EXTRA_WAIT_MS: "0"

          # レイアウト重複検知の詳細
          LAYOUT_SAMPLE_LIMIT: "200"                  # DOM先頭何要素で指紋化するか
          LAYOUT_IGNORE_URL_PATTERNS: ""              # ここに合致するURLはデデュプしない（例: "detail,lp"）

      # 出力：artifact（内部配布）
      - name: Upload artifact (public/)
        if: ${{ inputs.publish_target == 'artifact' }}
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: public
          if-no-files-found: warn

      # 出力：GitHub Pages（公開）
      - name: Upload Pages artifact
        if: ${{ inputs.publish_target == 'pages' }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    if: ${{ inputs.publish_target == 'pages' }}
    needs: run
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
